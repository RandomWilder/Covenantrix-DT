name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '20'

jobs:
  release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: covenantrix-desktop/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Build Python Backend
        working-directory: backend
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller
          pyinstaller main.spec

      - name: Prepare Backend for Packaging
        shell: bash
        run: |
          mkdir -p covenantrix-desktop/resources/backend
          cp -r backend/dist/* covenantrix-desktop/resources/backend/
          if [ "${{ runner.os }}" != "Windows" ]; then
            chmod +x covenantrix-desktop/resources/backend/backend
          fi

      - name: Install Frontend Dependencies
        working-directory: covenantrix-desktop
        run: npm ci

      - name: Build and Release Electron App
        working-directory: covenantrix-desktop
        run: npm run release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}